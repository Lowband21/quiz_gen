 The next thing that we're going to look at is how to use the loop variable within our program. To explain this, first let's look at the for loop that I'm showing you here for i in range n and then within that loop is the block that's getting repeated. What is the meaning of this expression range n? For example, range at 5 produces a sequence of 5 integers. 0, 1, 2, 3, 4. So range produces a sequence of integers. And notice that this might be a new concept to you. Computer scientists like to start counting not at 1 but at 0. More generally, range at n produces a sequence of n integers and those numbers range from 0 up to n minus 1. The variable i within the loop changes values every time through the loop. It starts at 0 and ends at n minus 1. And often within that block of code inside the for loop, we want to access the value of the variable i so we know which time through the loop we are on. It is not unusual but it's common to use that variable i within the loop. Let me show you an example of this. I'm in VS Code now and I'm going to create a new Python program called counting. In this program I'm going to start by outputting to the terminal. I know how to count. And now I'm going to make a loop that will count from 0 to 4. All I need to do is output the value of i itself. Because remember that range of 5 produces a sequence of numbers 0, 1, 2, 3, 4. And i takes those values, each of those values, each time through the loop. So if I just print it, I'm going to be able to see, there's the first line, I know how to count, I'm going to be able to see each of the values that i takes as we traverse through the loop 5 times. By the way, the value, the name of the loop variable doesn't have to be i. You can call it whatever you like. But the behavior of the program is the same. It's common to call it i for index, but you should feel free to use whatever sensible name for that variable that you like. Now you might be saying to yourself, wait, I want to count, but I don't want to count starting at 0. Computer scientists may count starting at 0, but the users of this program wouldn't be used to that. So I'd now like to change the output to not be 0, 1, 2, 3, 4, but 1, 2, 3, 4, 5. There are a few ways to do that. One of them is to realize that the value of i is changing from 0 up through 4. And so instead of outputting its value, we'll just add 1 to it. So the first time i is 0, but I'm going to output 0 plus 1 or 1. The second time through the loop, the value of i is 1, but I'm going to be outputting i plus 1 or 2. So when I run this program, I now see I know how to count 1, 2, 3, 4, 5. There's another way that you could change this program, which is to use range, the range command in a slightly different way. Instead of passing range one parameter, which is the number of times to go through the loop, I can instead specify a start and a stop value. So this is saying range is a sequence of numbers from 1 up through 5. But 5, the stop value, is not included. So to get 5 elements, I need to say range 1 to 6. Range 1 through 6 produces a sequence of integers starting at 1 and going up to, but not including, 6. So this program has the same behavior as the alternate way that I showed you how to do it before. Notice that we can easily change to count from 1 to 100 just by changing the stop value.