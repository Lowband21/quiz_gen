 In this video, we're looking at an idea called nested for loops. To show you what we want to accomplish, here's a little image about what we'd like to output to the terminal. It's got five stars per row and seven rows tall, and I want to write a program that will produce this image. I've set up the documentation for an example called stars.py, and I'm just showing you here that I actually could produce that image with seven print commands. But this is a real disappointing solution to the problem because it's inflexible, and it forces me to change the entire program when I want to alter the number of rows or the number of columns. So instead, I want to write the code in a flexible way so that I can easily change the number of stars going across the number of columns or going down the number of rows. So let's start this program just by trying to figure out one single line of this output, a loop that will output five stars. My first attempt looks like this for j in the range of five, meaning 0, 1, 2, 3, 4 will be the values for j. So this loop will get the body of the loop will get executed five times. So I'm going to just print a star so you can look at this and say, great, this just outputs five stars. When I run it, however, there's a disappointment because the five stars are in different lines. So we have to remember that there's a way to suppress the new line at the end of a print statement by saying the end will be simply an empty string. Now this code outputs five stars in a row. However, you'll notice even here the prompt, the dollar sign is on the same line as these five stars because I didn't output a new line at the end of that row. So I'm going to do that output and adjust a new line at the end of the row. But notice that I can't indent because if I do a print inside this indent, then that print that creates a new line happens every time through the loop. And I don't want it to. I just want it to happen at the end of the loop when the loop is over. So now I have code that's going to produce one row of five stars. OK, so now what I want to do is make seven rows exactly like the one row that I have. In other words, I want to repeat this code that I've written so far in a loop and I want it to happen seven times. We know that it takes a for loop to do a repetition like that. So what I'm going to do is select everything that I want to repeat from the code that I've already written, and I'm going to indent it one more level. So I just did a select of what I want to indent and I hit tab. So now this for loop is going to be the body of another outside loop. So in the outside loop, I'm going to let a new variable that I'll call i in the range of seven, meaning the inside of that outer for loop will be repeated seven times. And that's going to create seven rows of stars. So thinking about this differently, the inside for loop produces one row of five stars, and the outside for loop repeats that one row seven times. I've forgotten the colon at the end of that outside for loop. So there we go. There's my loop. Okay, now to make this a little bit more general, I'm not too happy about this seven and the five hard coded into my program. So what I'm going to do is create a variable called numRows, and I'm going to initialize it to seven. And then I'll change this outside for loop to be in the range of the number of rows. And this makes my program more general, because I can easily change the value of the number of rows and the number of columns. So the number of columns is the number of stars in a single row. So that will be changed in the inner for loop. And the number of times that I'm going to be repeating now is numCalls. So I can run this again, and I have more flexible code here because now the number of rows and the number of columns can be changed. However, another thing that I could do is let the user input this value. So what I'm going to do is have an input statement that says, how many rows of stars do you want? And I'm going to save that into the numRows variable. Of course, remember that the input command gives us a string as an output, and we want an integer. So I'm going to convert that string value into an integer. And I'll do the same thing for the number of columns. Okay, so now when I run the program, I can input the number of rows. Let's do 11 rows. How many columns of stars? 23. And there I get my flexibly sized matrix of stars.