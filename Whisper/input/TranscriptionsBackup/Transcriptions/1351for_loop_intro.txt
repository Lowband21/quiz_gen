 In this video, I'll talk about how to use for loops in Python. As a review, here's some code that draws a rectangle in a random position on a duDraw canvas. You can pause the video to take a good look at this because this is a review. Notice I'm saying import duDraw. I need that line anytime I use duDraw. And I'm also using the random package. I open a window, 400 by 400 pixels, clear the background, create two random numbers from 0 to 1 and store them in these variables x and y. Then I draw a filled square at the position x, y, the random position, and 0.01, 1% of the canvas is the size of that square. Then I display the window for an indefinite period of time until the user closes the window. Here's the output of one run of this program. And the random square in this case got put in this position. Now, for motivating for loops, let's look at a couple of other images. How would we create these? On the left, I have dozens of squares put in random positions. On the right, I have a bunch of circles along the diagonal. So far, the only way that you know how to write programs that would create these images are to repeat the lines of code that produce each of those shapes. And this is very inefficient. And in fact, not even sufficient to solve the problem because sometimes we won't know how many times we want to repeat the drawing of those shapes until the program is running. And solving these problems is what for loops does. So for loops in pythons look like this. The syntax is for i in range as an example 7. And then after that, we have a block of code that we want to repeat. Notice there's a colon at the end of the FOR statement. And notice that the code within that FOR statement gets executed 7 times. Now, of course, there's nothing special about the number 7. We could just as easily put any number there. And so the general syntax is for i in range n, where n is any number that you want. Notice that the block of code inside the loop is indented an extra level. Spacing is extremely important in Python. It determines in this case which code is going to be repeated. VS Code has some, the editor has some features that make it more easy for you to do the indentation. And I'll demo that now. I'm in VS Code now and I'm going to create a program that has a loop in it. So no file. I'm going to call this many hellos.py. And remember that our very first Python program was the Hello World program. And when I run this, I get one message, Hello World. Let's say I want to repeat that multiple times. I'm going to create a for loop. For i in the range, I'll say 7 colon. I must now indent this line. I indented it with a tab and VS Code automatically turns that tab into four spaces. It's a common convention to use four spaces for the indent. This program is saying, repeat seven times the printing of the message, Hello World. So if I run that, I now get seven messages, Hello World. Without the for loop, you would have had to take this print statement and repeat it seven times. And that code has the same outcome. However, it doesn't allow us to vary the number of times that we output, besides being really annoying and inefficient. So to demonstrate what I mean by not knowing in advance how many times or wanting to change the number of times, let's ask the user how many greetings they want. Recall, we can do that with an input command. And then because this is going to be an integer, we're going to convert the type of the string that they type into an integer. And then we're going to store that in the variable that I'll call numGreetings. So now, instead of giving seven greetings, I'm going to repeat this loop however many times they entered. Let me run this. How many greetings would you like? Three. And now the program outputs Hello World three times. If you look at this line right here, personally, I don't like their input to be abutted right next to my question mark. And I can fix that by putting an extra space into that string. How many greetings would you like? This time I'd like a thousand. And there they all are. If I scroll all the way up, there's a thousand Hello Worlds. So this is showing you that you can actually put a variable in the parameter to the range command so that you can change during the running of the program the number of times that the for loops repeated.