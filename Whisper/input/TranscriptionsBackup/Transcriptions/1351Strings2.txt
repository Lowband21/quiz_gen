 Let's continue our study of strings. Many of the operations that you learned on lists also work on strings, though some don't. So let's start by creating a string variable called greeting, and greeting now contains the text, Welcome to the Wonderful World of Strings. One of the functions that works with lists also works with strings. I can ask for the length of this string. And if I output that, it will tell me how many characters are in that string. Now, strings are ordered just like lists are. And so what that means is that we can use an index to access individual characters in the strings. And also, strings can be sliced. So let's look at a few examples of that. You can pause the video if you'd like and see if you can answer what you think each of these print statements will output. Greeting at zero means the index zero character of the string. In other words, the first character of the string. So line seven should output a W. A minus one index, just like in lists, gives us the last character. So this line eight should output the last character of the greeting string, which is a period. Line nine is a slice. And it says go from zero up to the tenth character, but not including the index ten character. So zero, one, two, three, four, five, six, seven, eight, nine. It should say welcome to. And then print greeting minus five to the end should output from the index negative five, which is negative one, two, three, four, five. So this line ten should output INGS period. And that's the output that we see. Now you can use loops, for loops, to traverse characters within a string just like you could with lists. And remember, there are two types. One is an index based for loop, and the other is for loop that one by one will go through each of the characters in a string. So let me show you some code here that demonstrates an example of the index based traversal. I'll create a variable called count and set it equal to zero, and I'm going to count the number of O's in my string. So for i in the range of however long the greeting is, which is 42 characters, I'll look at the ith location, the ith character in that string, and if it's equal to the character lowercase o, then I'll increment the count. Now that bit of code won't show anything to the user, so what I need is an output statement here. So I'm going to print an f string that says that the number of O's in the greeting is whatever is stored in the value of count. So you can count the O's in there and see and confirm that this is the correct answer. The number of O's in the greeting is five. Now if you'd like, you can pause the video and you can try rewriting this loop as a for loop that traverses in order without using an index. So I've written that code and I'm going to replace this loop with the other style of traversing a sequence for character in greeting. So character is going to take the value of each one of these characters in the string. I'll check if that character is equal to a lowercase o and increment the count and then I'll output the answer. And hopefully this is going to work just like before. Yep, I counted that there are five O's. So those are a bunch of ways that strings are like lists, but there are ways that strings are not like lists. So unlike lists, strings are immutable and that means that they're unchangeable. So the following line of code, which tries to manipulate directly the contents of the string, will not run. If I try to say take the letter w and store it in the zeroth index position of that string, this will not run. The error that gets generated is a string object does not support item assignment, meaning you cannot change its value. You might think to yourself, well then a variable can never be changed. It can be though, it just can't be changed directly. In order to change the value of the string variable, you actually have to create a whole new string and store that in the variable. So if I want to change the first letter of that string to a lowercase, one way to do it is to say greeting stored in the variable greeting is an entirely new string, which is a lowercase w concatenated with the old greeting starting from index one to the end. Let's make sure that worked. Oops, I left this in here. Let me comment out that illegal line. And there we go. So we changed the value of this variable greeting by creating an entirely new string and storing it. Now, this isn't it for strings. Text information is so important, so Python comes with a variety of commands for processing strings. And you'll learn about that soon.